exit
hash
exit
data
hash
JSON.parse(hash.to_json)
JSON.parse(hash)
hash.to_json
hash.to_json_raw
hash.:to_json_raw
hash.methods
hash.to_h
hash.class
hash
exit
b = a.gsub("=>", ":")
a = @transaction.to_s.gsub(":", "")
data.gsub()
@transaction
data
data.to_xml
data.to_h
data
exit
b = a.to_s.gsub("=>", ":")
a
a.to_s.gsub("=>", ":")
a.to_s
a.each_value{|data| data.to_s}
a.class
a.to_s
a
a.each_value{|data| data}
a.each_value{|data| data.gsub("=>", ":")}
a
a.map{|data| data}
a.map{|data| data.gsub("=>", ":")}
a.class
a.to_h
a.to_h.to_xml
a.to_h
a.to_hash
a
a.class
a.to_xml
a
a.methods
a
a = JSON.parse(@transaction.to_json)
a = JSON.parse(@transaction.to_hash)
a = JSON.parse(@transaction)
@transaction.to_hash.methods
@transaction.to_hash
@transaction.methods
exit
data.attributes?
data.attribute_nodes
data.attribute_hash
data.attribute_hass
dataattribute_hash
data.methods
data = Nokogiri::XML::reader(a)
data = Nokogiri::XML::Reader(a)
data = Nokogiri::XML::reader(a)
a.document?
a.elements
a.methods
a
a = Nokogiri::XML(@transaction.to_json)
Nokogiri::XML(@transaction.to_json)
Nokogiri::XML(@transaction)
@transaction
@transaction.to_json
xml_data.to_str
xml_data.length
xml_data.first
xml_data.class
xml_data.elements
xml_data.methods
xml_data
